version: '3.8'

services:
  # Next.js App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000
    environment:
      # This tells the OpenTelemetry SDK inside your app where to send trace data.
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4318/v1/traces
      # Your Azure connection string needs to be available as an environment variable.
      # Docker Compose automatically reads the .env file.
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - otel-collector
      - rabbitmq

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
    depends_on:
      - jaeger

  # Jaeger (for viewing traces)
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # Jaeger collector

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

volumes:
  rabbitmq_data:
